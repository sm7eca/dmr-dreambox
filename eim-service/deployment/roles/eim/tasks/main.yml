
- name: Create group for EIM service
  tags:
    - account
  group:
    name: "{{ service_user }}"
    system: true
  when: inventory_hostname in groups.production

- name: Create a user for EIM service
  tags:
    - account
  user:
    name: "{{ service_user }}"
    system: true
    groups:
      - docker
      - "{{ service_user }}"
  when: inventory_hostname in groups.production

- name: Get current GIT commit
  become: false
  delegate_to: localhost
  shell:
    cmd: git rev-parse HEAD
  register: git_rev_parse

- name: SetFact. Git Hash
  set_fact:
    git_commit_hash: "{{ git_rev_parse.stdout }}"

- name: Create Folder
  file:
    dest: "{{ target_folder }}"
    state: directory
    owner: "{{ service_user }}"
    mode: 0740

- name: Generate required docker-compose files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ service_user }}"
    mode: 0640
  loop:
    - { "src": "templates/docker-compose.yml.j2", "dest": "{{ target_folder }}/docker-compose.yml"}
    - { "src": "templates/env.j2", "dest": "{{ target_folder }}/.env"}
  register: compose_files

- name: Copy systemd service files (prod only)
  tags:
    - smangels
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
  loop:
    - { "src": "files/docker-compose@.service", "dest": "/etc/systemd/system/docker-compose@.service"}
    - { "src": "files/docker-cleanup.service", "dest": "/etc/systemd/system/docker-cleanup.service"}
    - { "src": "files/docker-cleanup.timer", "dest": "/etc/systemd/system/docker-cleanup.timer" }
  when: inventory_hostname in groups.production
  register: systemd_files

- name: Docker, pull new images
  shell:
    cmd: "docker-compose -f {{ target_folder }}/docker-compose.yml pull"
  when: inventory_hostname in groups.production

- name: Restart systemd services for EIM
  systemd:
    daemon_reload: yes
    state: restarted
    enabled: yes
    name: "{{ item }}"
  loop:
    - "docker-compose@eim.service"
    - "docker-cleanup.timer"
  when: inventory_hostname in groups.production

- name: Restart the stack in /tmp/eim
  shell:
    cmd: docker-compose -f /tmp/eim/docker-compose.yml up -d --build
  when: inventory_hostname in groups.local

- name: "Validate connectivity to {{ uri_expected }}"
  delegate_to: localhost
  uri:
    url: "{{ uri_expected }}"
    method: GET
  register: uri_data
  tags:
    - sebman
  until: uri_data.status == 200
  retries: 10
  delay: 2
  failed_when: false
